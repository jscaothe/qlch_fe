// 20250329231507
// http://localhost:3000/api-json

{
  "openapi": "3.0.0",
  "paths": {
    "/api/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "summary": "Get all users",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "admin",
                "manager",
                "staff"
              ],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all users"
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "UsersController_create",
        "summary": "Create new user",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return user by id"
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UsersController_update",
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}/status": {
      "patch": {
        "operationId": "UsersController_updateStatus",
        "summary": "Update user status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "description": "User status"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/rooms": {
      "get": {
        "operationId": "RoomsController_findAll",
        "summary": "Get all rooms",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all rooms"
          }
        },
        "tags": [
          "rooms"
        ]
      },
      "post": {
        "operationId": "RoomsController_create",
        "summary": "Create new room",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully"
          }
        },
        "tags": [
          "rooms"
        ]
      }
    },
    "/rooms/{id}": {
      "get": {
        "operationId": "RoomsController_findOne",
        "summary": "Get room by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return room by id"
          },
          "404": {
            "description": "Room not found"
          }
        },
        "tags": [
          "rooms"
        ]
      },
      "patch": {
        "operationId": "RoomsController_update",
        "summary": "Update room",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room updated successfully"
          },
          "404": {
            "description": "Room not found"
          }
        },
        "tags": [
          "rooms"
        ]
      },
      "delete": {
        "operationId": "RoomsController_remove",
        "summary": "Delete room",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          }
        },
        "tags": [
          "rooms"
        ]
      }
    },
    "/tenants": {
      "get": {
        "operationId": "TenantsController_findAll",
        "summary": "Get all tenants",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all tenants"
          }
        },
        "tags": [
          "tenants"
        ]
      },
      "post": {
        "operationId": "TenantsController_create",
        "summary": "Create new tenant",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tenant created successfully"
          }
        },
        "tags": [
          "tenants"
        ]
      }
    },
    "/tenants/{id}": {
      "get": {
        "operationId": "TenantsController_findOne",
        "summary": "Get tenant by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return tenant by id"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "tags": [
          "tenants"
        ]
      },
      "patch": {
        "operationId": "TenantsController_update",
        "summary": "Update tenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant updated successfully"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "tags": [
          "tenants"
        ]
      },
      "delete": {
        "operationId": "TenantsController_remove",
        "summary": "Delete tenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant deleted successfully"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "tags": [
          "tenants"
        ]
      }
    },
    "/tenants/{id}/status": {
      "patch": {
        "operationId": "TenantsController_updateStatus",
        "summary": "Update tenant status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant status updated successfully"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "tags": [
          "tenants"
        ]
      }
    },
    "/contracts": {
      "get": {
        "operationId": "ContractsController_findAll",
        "summary": "Get all contracts",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all contracts"
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "post": {
        "operationId": "ContractsController_create",
        "summary": "Create new contract",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract created successfully"
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/contracts/{id}": {
      "get": {
        "operationId": "ContractsController_findOne",
        "summary": "Get contract by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return contract by id"
          },
          "404": {
            "description": "Contract not found"
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "post": {
        "operationId": "ContractsController_update",
        "summary": "Update contract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract updated successfully"
          },
          "404": {
            "description": "Contract not found"
          }
        },
        "tags": [
          "contracts"
        ]
      },
      "delete": {
        "operationId": "ContractsController_remove",
        "summary": "Delete contract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract deleted successfully"
          },
          "404": {
            "description": "Contract not found"
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/contracts/{id}/renew": {
      "post": {
        "operationId": "ContractsController_renew",
        "summary": "Renew contract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenewContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract renewed successfully"
          },
          "400": {
            "description": "Only active contracts can be renewed"
          },
          "404": {
            "description": "Contract not found"
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/contracts/{id}/terminate": {
      "post": {
        "operationId": "ContractsController_terminate",
        "summary": "Terminate contract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract terminated successfully"
          },
          "400": {
            "description": "Only active contracts can be terminated"
          },
          "404": {
            "description": "Contract not found"
          }
        },
        "tags": [
          "contracts"
        ]
      }
    },
    "/transactions": {
      "get": {
        "operationId": "TransactionsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "TransactionsController_create",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "operationId": "TransactionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "TransactionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "Quản lý chung cư API",
    "description": "API documentation for Quản lý chung cư system",
    "version": "1.0",
    "contact": {
      
    }
  },
  "tags": [
    
  ],
  "servers": [
    
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "staff"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "default": "active"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "role",
          "status",
          "password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "manager",
              "staff"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CreateRoomDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "CreateTenantDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "CreateContractDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "RenewContractDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "TerminateContractDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          
        }
      }
    }
  }
}